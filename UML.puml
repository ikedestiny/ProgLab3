@startuml
enum RootOfModel.Gender {
+  MALE
+  FEMALE
}
class Model.Hotel {
- List<Room> rooms
- List<Worker> workers
- String name
- Receptionist receptionist
- int id
- {static} int objectCount
+ List<Room> getRooms()
+ void fillSomeRooms(int)
+ List<Worker> getWorkers()
+ Receptionist getReceptionist()
+ String getName()
+ void setRoomsPrice(int)
+ void addAppliance(RoomAppliance)
+ int hashCode()
+ boolean equals(Object)
+ String toString()
}
class People.Worker {
- Position position
- int id
- int salary
+ Position getPosition()
+ void setPosition(Position)
+ int getSalary()
+ void setSalary(int)
+ int getId()
}
class Appliances.Recess {
- boolean stuckOut
+ boolean isStuckOut()
+ void setStuckOut(boolean)
}
class People.Receptionist {
+ void welcomeGuest(Guest,Hotel)
+ void giveRoomToGuest(Guest,int)
+ void callGuest(Guest,Telephone)
+ void giveGuestKey(Guest)
}
class Appliances.Wardrobe {
- boolean occupied
+ void occupy()
+ boolean isOccupied()
+ void setOccupied(boolean)
}
class People.Guest {
- boolean hasBookedRoom
- Room room
+ void bookRoom(Hotel,int)
+ void call(Receptionist)
+ void layOnBed()
+ void openCloset()
+ boolean isHasBookedRoom()
+ Room getRoom()
+ void getSettled()
}
enum RootOfModel.Position {
+  MANAGER
+  CHEF
+  BARMAN
+  WAITER
+  WAITRESS
+  RECEPTIONIST
}
interface RootOfModel.Onable {
~ void toggleSwitch()
}
class Appliances.Telephone {
+ void ring()
}
interface RootOfModel.Occupyable {
~ void occupy()
}
abstract class RootOfModel.RoomAppliance {
- {static} int objectCount
- int id
+ int hashCode()
+ boolean equals(Object)
+ String toString()
}
class Appliances.Shelf {
- boolean occupied
+ boolean isOccupied()
+ void setOccupied(boolean)
+ void occupy()
}
class Model.Room {
- int number
~ List<RoomAppliance> appliances
~ int price
- boolean booked
- {static} int objectCount
- int id
+ int getNumber()
+ void setNumber(int)
+ boolean isBooked()
+ void setBooked(boolean)
+ int getPrice()
+ void setPrice(int)
+ List<RoomAppliance> getAppliances()
+ void addAppliance(RoomAppliance)
+ void ringBell()
+ void blinkHole()
+ int hashCode()
+ boolean equals(Object)
+ String toString()
}
abstract class People.Person {
- String name
- int age
- Gender gender
- {static} int objectCount
- int id
+ String getName()
+ int getAge()
+ Gender getGender()
+ void call(Person,Telephone)
+ int hashCode()
+ boolean equals(Object)
+ String toString()
}
class Appliances.Chair {
}
class Model.Main {
+ {static} void main(String[])
}
interface RootOfModel.Ringeable {
~ void ring()
}
interface RootOfModel.Blinkeable {
~ void blink()
}
class Appliances.TV {
~ boolean isOn
+ void toggleSwitch()
}
class Appliances.Bell {
+ void ring()
}
class Appliances.PeepHoleBulb {
- boolean bulbState
- Recess recess
+ void blink()
+ void toggleSwitch()
+ void stickOutRecess()
}
class Appliances.Closet {
- boolean open
+ boolean isOpen()
+ void setOpen(boolean)
+ void openClose()
}


People.Person <|-- People.Worker
People.Worker <|-- People.Receptionist
RootOfModel.Occupyable <|.. Appliances.Wardrobe
RootOfModel.RoomAppliance <|-- Appliances.Wardrobe
People.Person <|-- People.Guest
RootOfModel.Ringeable <|.. Appliances.Telephone
RootOfModel.RoomAppliance <|-- Appliances.Telephone
RootOfModel.Occupyable <|.. Appliances.Shelf
RootOfModel.RoomAppliance <|-- Appliances.Shelf
RootOfModel.RoomAppliance <|-- Appliances.Chair
RootOfModel.Onable <|.. Appliances.TV
RootOfModel.RoomAppliance <|-- Appliances.TV
RootOfModel.Ringeable <|.. Appliances.Bell
RootOfModel.RoomAppliance <|-- Appliances.Bell
RootOfModel.Onable <|.. Appliances.PeepHoleBulb
RootOfModel.Blinkeable <|.. Appliances.PeepHoleBulb
RootOfModel.RoomAppliance <|-- Appliances.PeepHoleBulb
RootOfModel.RoomAppliance <|-- Appliances.Closet
@enduml